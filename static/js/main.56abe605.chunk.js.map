{"version":3,"sources":["components/statusActive.js","components/statusDisabled.js","components/statusSelected.js","components/item.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["StatusActive","food","buy","className","onClick","id","StatusDisabled","item","StatusSelected","selected","Item","foodSelect","hoverItem","unHoverItem","React","useState","title","setTitle","classes","padding","classesCard","cardTitle","setcardTitle","status","push","onMouseEnter","enterMouseStatus","onMouseLeave","src","alt","size","statusItem","Main","props","map","key","foodToggle","hover","unHover","App","setFood","hoverDefault","setHoverDefault","a","style","background","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.56abe605.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction StatusActive( {food, buy}) {\r\n    return (\r\n            <div className=\"text-white d-flex justify-content-center pt-3\">\r\n                <div className=\"pr-1\">\r\n                    <span>Чего сидишь? Порадуй котэ, </span>\r\n                </div>\r\n                <div>\r\n                    <span className=\"buy-link\" onClick={() => {buy(food.id)}}>купи</span>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n}\r\n\r\nexport default StatusActive;\r\n","import React from 'react';\r\n\r\nfunction StatusDisabled( {food}) {\r\n    return (\r\n            <div className=\"text-white d-flex justify-content-center pt-3\">\r\n                <div className=\"pr-1\">\r\n                    <span>Печалька, c {food.item} </span>\r\n                </div>\r\n                <div>\r\n                    <span>закончился</span>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n}\r\n\r\nexport default StatusDisabled;\r\n","import React from 'react';\r\n\r\nfunction StatusSelected( {food}) {\r\n    return (\r\n            <div className=\"text-white d-flex justify-content-center pt-3\">\r\n                <span>{food.selected}</span>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default StatusSelected;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport StatusActive from './statusActive'\r\nimport StatusDisabled from './statusDisabled'\r\nimport StatusSelected from './statusSelected'\r\n// import cat from ''\r\n\r\n\r\n\r\n\r\n function statusItem(food, foodSelect) {\r\n    if ( food.status === 'active' ) {\r\n        return <StatusActive food={food} buy={foodSelect}/>\r\n    } else if ( food.status === 'disabled' ) {\r\n        return <StatusDisabled food={food}/>\r\n    } else if ( food.status === 'selected' ) {\r\n        return <StatusSelected food={food}/>\r\n    }\r\n}\r\n\r\n\r\n function Item( { food, foodSelect, hoverItem, unHoverItem } ) {\r\n    const [title, setTitle] =  React.useState('Сказачное заморское яство');\r\n    const classes = [];\r\n    const padding = [];\r\n    const classesCard = [];\r\n    const [cardTitle, setcardTitle] = React.useState(['']);\r\n\r\n\r\n\r\n\r\n     function enterMouseStatus(food) {\r\n        if ( food.status === 'active' || food.status === 'disabled') {\r\n             hoverItem(food.status)\r\n        } else if ( food.status === 'selected' ) {\r\n             setTitle( 'Котэ не одобряет?');\r\n             setcardTitle('red-cat');\r\n        }\r\n    }\r\n\r\n     function leaveMouseStatus(food) {\r\n             unHoverItem();\r\n             setTitle( 'Сказачное заморское яство')\r\n             setcardTitle('');\r\n    }\r\n    \r\n    if ( food.status === 'selected' ) {\r\n         classes.push('selected');\r\n    } else if ( food.status === 'disabled' ) {\r\n         classes.push('disabled');\r\n         classesCard.push('disabled-card');\r\n    }\r\n\r\n    if ( food.id === 3 ) {\r\n        padding.push('pr-lg-0')\r\n    }\r\n    \r\n    return (\r\n        <div className={`col-sm-8 col-lg-4 mb-3 all-card ${padding}`} >\r\n            <div className={`my-border ${classes}`}>\r\n            <div className={`my-card pt-3 ${classesCard}`} onClick={() =>foodSelect(food.id)} onMouseEnter={() => enterMouseStatus(food)} onMouseLeave={() => {leaveMouseStatus(food)}}>\r\n                <div className=\"text-left pl-4\">\r\n                <h6 className={`${cardTitle}`}>{title}</h6>\r\n                <h1 className=\"mb-0\">Нямушка</h1>\r\n                <h4 className=\"mt-0 mb-3\">с { food.item }</h4>\r\n                <h6>{ food.title } в подарок</h6>\r\n                </div>\r\n                <div className=\"d-flex align-content-end mt-5\">\r\n\r\n                <img src=\"./images/Photo.png\" alt=\"cat\" className=\"cat\" />\r\n\r\n                <div className={`circle ${classes}`}>\r\n                    <h2 className=\"m-0 mt-2\">{food.size} </h2>\r\n                    <h3 className=\"m-0\">кг</h3>\r\n                </div>\r\n\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n            { statusItem(food, foodSelect) }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nItem.propTypes = {\r\n    foodSelect: PropTypes.func,\r\n};\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport './main.css'\r\nimport Item from \"./item\";\r\n\r\nfunction Main(props) {\r\n    return (\r\n        <div className=\"container text-center\">\r\n            <h1 className=\"text-white pt-5\">Ты сегодня покормил кота?</h1>\r\n\r\n            <div className=\"row justify-content-center mt-4\">\r\n                {props.food.map(item => {\r\n                    return <Item food={item} key={item.id} foodSelect={props.foodToggle} hoverItem={props.hover} unHoverItem={props.unHover}/>\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport './App.css';\nimport Main from \"../src/components/main\"\n\n\n\n\n   function App() {\n    const [food, setFood] =  React.useState([\n        {\n            id: 1,\n            item: 'фуа-гра',\n            title: '10 порций мышь',\n            size: '0.5',\n            status: 'active',\n            selected: 'Печень утки разварная с артишоками.'\n        },\n        {\n            id: 2,\n            item: 'рыбой',\n            title: '40 порций 2 мыши',\n            size: '2',\n            status: 'active',\n            selected: 'Головы щучьи с чесноком да свежайшая семгушка.'\n        },\n        {\n            id: 3,\n            item: 'курой',\n            title: '100 порций 5 мышей',\n            size: '5',\n            status: 'disabled',\n            selected: 'Филе из циплят с трюфелями в бульоне.'\n        },\n    ]);\n\n    const [hoverDefault, setHoverDefault] =  React.useState(['main']);\n\n    async function activeToggle(id){\n        setFood(\n            food.map(item => {\n            if ( item.id === id ) {\n                if ( item.status === 'active' ) {\n                    item.status = 'selected'\n                } else if ( item.status === 'selected' ) {\n                    item.status = 'active'\n                }\n            }\n            return item\n        })\n        )\n    }\n\n    async function hoverItem(status) {\n        if ( status === 'active' ) {\n            await setHoverDefault('active-hover')\n        } else{\n            await setHoverDefault('disabled-hover')\n        }\n    }\n\n    async function unHoverItem() {\n        await setHoverDefault('main')\n    }\n\n\n    const styles = {\n        wrapper1: {\n            background: `url(\"./images/Pattern.png\" )`,\n        }\n    };\n\n  return (\n      <div className={`wrapper `} style={styles.wrapper1}>\n            <div className={hoverDefault}>\n                <Main food={food} foodToggle={activeToggle} hover={hoverItem} unHover={unHoverItem}/>\n            </div>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}